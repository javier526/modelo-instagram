{
  "_args": [
    [
      {
        "raw": "bel@^4.0.0",
        "scope": null,
        "escapedName": "bel",
        "name": "bel",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\maste\\Desktop\\proyecto\\node_modules\\yo-yo"
    ]
  ],
  "_from": "bel@>=4.0.0 <5.0.0",
  "_id": "bel@4.6.0",
  "_inCache": true,
  "_location": "/bel",
  "_nodeVersion": "6.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/bel-4.6.0.tgz_1490544687987_0.46643712162040174"
  },
  "_npmUser": {
    "name": "shama",
    "email": "kyle@dontkry.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bel@^4.0.0",
    "scope": null,
    "escapedName": "bel",
    "name": "bel",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/yo-yo"
  ],
  "_resolved": "https://registry.npmjs.org/bel/-/bel-4.6.0.tgz",
  "_shasum": "3ade16e236ab2204d8d1c66eac4bd573793ac999",
  "_shrinkwrap": null,
  "_spec": "bel@^4.0.0",
  "_where": "C:\\Users\\maste\\Desktop\\proyecto\\node_modules\\yo-yo",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "bugs": {
    "url": "https://github.com/shama/bel/issues"
  },
  "dependencies": {
    "global": "^4.3.0",
    "hyperx": "^2.3.0",
    "on-load": "^3.2.0"
  },
  "description": "A simple extension to native elements",
  "devDependencies": {
    "browser-process-hrtime": "^0.1.2",
    "browserify": "^14.1.0",
    "electron-prebuilt": "^0.36.9",
    "morphdom": "^2.1.1",
    "standard": "^9.0.2",
    "tape": "^4.6.0",
    "testron": "^1.2.0",
    "wzrd": "^1.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3ade16e236ab2204d8d1c66eac4bd573793ac999",
    "tarball": "https://registry.npmjs.org/bel/-/bel-4.6.0.tgz"
  },
  "files": [
    "index.js",
    "create.js"
  ],
  "gitHead": "67096071dfb3e4f1a38867cc18f1c6cf4a86f145",
  "homepage": "https://github.com/shama/bel",
  "keywords": [
    "virtual-dom",
    "element",
    "diffhtml"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chromakode",
      "email": "npm@chromakode.com"
    },
    {
      "name": "shama",
      "email": "kyle@dontkry.com"
    },
    {
      "name": "yoshuawuyts",
      "email": "i@yoshuawuyts.com"
    }
  ],
  "name": "bel",
  "optionalDependencies": {},
  "readme": "# [bel](https://en.wikipedia.org/wiki/Bel_(mythology))\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Downloads][downloads-image]][downloads-url]\n[![js-standard-style][standard-image]][standard-url]\n![experimental][experimental-image]\n\nA simple library for composable DOM elements using [tagged template strings](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\n\nIf you're looking for a higher level front end framework, try\n[yo-yo](https://github.com/maxogden/yo-yo). Or even higher than that, try\n[choo](https://github.com/yoshuawuyts/choo).\n\n## usage\n\nFor a more in depth tutorial on getting started, please [check out the wiki](https://github.com/shama/bel/wiki).\n\n### A Simple Element\n\nCreate an element:\n\n```js\n// list.js\nvar bel = require('bel')\n\nmodule.exports = function (items) {\n  return bel`<ul>\n    ${items.map(function (item) {\n      return bel`<li>${item}</li>`\n    })}\n  </ul>`\n}\n```\n\nThen pass data to it and add to the DOM:\n\n```js\n// app.js\nvar createList = require('./list.js')\nvar list = createList([\n  'grizzly',\n  'polar',\n  'brown'\n])\ndocument.body.appendChild(list)\n```\n\n### Data Down, Actions Up\n\n```js\n// list.js\nvar bel = require('bel')\n\n// The DOM is built by the data passed in\nmodule.exports = function (items, onselected) {\n  function render () {\n    return bel`<ul>\n    ${items.map(function (item) {\n      return bel`<li>${button(item.id, item.label)}</li>`\n    })}\n    </ul>`\n  }\n  function button (id, label) {\n    return bel`<button onclick=${function () {\n      // Then action gets sent up\n      onselected(id)\n    }}>${label}</button>`\n  }\n  var element = render()\n  return element\n}\n```\n\n```js\n// app.js\nvar bel = require('bel')\nvar morphdom = require('morphdom')\nvar list = require('./list.js')\n\nmodule.exports = function (bears) {\n  function onselected (id) {\n    // When a bear is selected, rerender with the newly selected item\n    // This will use DOM diffing to render, sending the data back down again\n    morphdom(element, render(id))\n  }\n  function render (selected) {\n    return bel`<div className=\"app\">\n      <h1>Selected: ${selected}</h1>\n      ${list(bears, onselected)}\n    </div>`\n  }\n  // On first render, we haven't selected anything\n  var element = render('none')\n  return element\n}\n```\n\n### lifecycle events\n\nUse the `onload` and `onunload` properties to call a function when the element\nis inserted and removed from the DOM respectively.\n\n```js\nvar bel = require('bel')\n\nvar modal = bel`<div onload=${function (element) {\n  console.log('Hello DOM!')\n}} onunload=${function (element) {\n  console.log('Goodbye DOM!')\n}}>hello!</div>`\n\ndocument.body.appendChild(modal)\ndocument.body.removeChild(modal)\n```\n\n### use with/without [hyperx](https://www.npmjs.com/package/hyperx)\n\n`hyperx` is built into `bel` but there may be times when you wish to use your\nown version or implementation of `hyperx`. Or if you prefer to create elements\nusing `bel` without using tagged template literals:\n\n```js\nvar createElement = require('bel').createElement\nvar hyperx = require('hyperx')\nvar bel = hyperx(createElement)\n\nvar element = bel`<div class=\"heading\">Hello!</div>`\n\n// ...\n\nvar sameElement = createElement('div', { className: 'heading' }, ['Hello!'])\n```\n\n### use yo-yoify to build\n\nTransform bel template strings into pure and fast document calls with browserify.\n\ne.g. `browserify entry.js -g yo-yoify -o bundle.js`\n\n[See also](https://github.com/shama/yo-yoify#how-this-works)\n\n\n## note\n\nPlease use [yo-yoify](https://github.com/shama/yo-yoify) which will transform any `Function.caller` into plain strings until an alternative solution to identify element creators is implemented.\n\nyo-yoify can resolve the error like below:\n\n`TypeError: Function.caller used to retrieve strict caller`\n\nor\n\n`TypeError: access to strict mode caller function is censored`\n\n\n## security\n\nbel sets attributes with `element.setAttribute()` and `element.setAttributeNS()`, and creates text nodes with `document.createTextNode()`.  These approaches mitigate some [Cross-Site Scripting (XSS)](https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29) attacks.  You should still code carefully every time you put content from users in the DOM.\n\n## similar projects\n\n* [vel](https://github.com/yoshuawuyts/vel)  \n  minimal virtual-dom library\n* [base-element](https://github.com/shama/base-element)  \n  An element authoring library for creating standalone and performant elements\n* [virtual-dom](https://github.com/Matt-Esch/virtual-dom)  \n  A Virtual DOM and diffing algorithm\n* [hyperscript](https://github.com/dominictarr/hyperscript)  \n  Create HyperText with JavaScript.\n\n# license\n(c) 2016 Kyle Robinson Young. MIT License\n\n[npm-image]: https://img.shields.io/npm/v/bel.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/bel\n[travis-image]: https://img.shields.io/travis/shama/bel/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/shama/bel\n[downloads-image]: http://img.shields.io/npm/dm/vel.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/bel\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: https://github.com/feross/standard\n[experimental-image]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/shama/bel.git"
  },
  "scripts": {
    "bench": "wzrd bench/index.js:bundle.js",
    "start": "wzrd test/index.js:bundle.js",
    "test": "standard && node test/server.js && browserify test/index.js | testron"
  },
  "version": "4.6.0"
}
